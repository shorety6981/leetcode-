### 题目

现在有一个整数类型的数组，数组中素只有一个元素只出现一次，其余的元素都出现两次。
注意：
你需要给出一个线性时间复杂度的算法

### 解题思路
1，首先对数组进行排序，于是相同的元素相邻   
2，然后比较相邻元素，相同则跳过下一位    
   不相同则输出i位置上的元素
```
class Solution {
public:
    #include<algorithm>
    /**
     * 
     * @param A int整型一维数组 
     * @param n int A数组长度
     * @return int整型
     */
    int singleNumber(int* A, int n) {
        // write code here
        int single;
        sort(A,A+n);
        for(int i=0;i<n;)
        {
            if(A[i]!=A[i+1])
            {
                single=A[i];
                break;
            }
            else
                i=i+2;
        }
        return single;
    }
};
```
